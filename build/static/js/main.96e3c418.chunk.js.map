{"version":3,"sources":["style/Global.tsx","routerHistory.ts","utils/getRpcUrl.ts","utils/web3React.ts","utils/wallet.ts","hooks/useAuth.ts","components/UnlockButton.tsx","utils/callHelpers.ts","utils/web3.ts","hooks/useWeb3.ts","config/constants/contracts.ts","utils/addressHelpers.ts","utils/contractHelpers.ts","hooks/useContract.ts","hooks/useDepositSellPublic.ts","views/Sell/constants.ts","hooks/useWithDrawSellPublic.ts","contexts/RefreshContext.tsx","hooks/useRefresh.ts","hooks/useSellHelpers.ts","utils/formatBalance.ts","views/Sell/utils/index.js","views/Sell/Store.js","views/Sell/components/common/Header.tsx","views/Sell/components/Forms.tsx","views/Sell/components/Projects/Store-Projects.js","views/Sell/components/Projects/index.tsx","config/index.ts","views/Sell/components/Detail/Store-Detail.js","views/Sell/components/Detail/Table_Allocations.tsx","views/Sell/components/Detail/Table_info.tsx","views/Sell/components/Detail/utils.js","views/Sell/components/Detail/Banner.tsx","views/Sell/components/Detail/index.tsx","App.tsx","contexts/ThemeContext.tsx","state/block/index.ts","state/index.ts","Providers.tsx","index.tsx"],"names":["GlobalStyle","createGlobalStyle","theme","colors","background","history","createBrowserHistory","nodes","process","getNodeUrl","randomIndex","random","length","rpcUrl","chainId","parseInt","injected","InjectedConnector","supportedChainIds","walletconnect","WalletConnectConnector","rpc","bridge","qrcode","pollingInterval","bscConnector","BscConnector","connectorsByName","ConnectorNames","Injected","WalletConnect","BSC","getLibrary","provider","setupNetwork","a","window","ethereum","request","method","params","toString","chainName","nativeCurrency","name","symbol","decimals","rpcUrls","blockExplorerUrls","console","error","useAuth","useWeb3React","activate","deactivate","login","useCallback","connectorID","connector","UnsupportedChainIdError","logout","UnlockButton","props","onPresentConnectModal","useWalletModal","className","onClick","depositSellPublic","amount","sellPublicContract","account","amountTemp","BigNumber","times","pow","methods","deposit","estimateGas","from","value","gas","send","on","tx","log","transactionHash","withDrawSellPublic","orderId","withDraw","RPC_URL","getRpcUrl","httpProvider","Web3","providers","HttpProvider","timeout","web3NoAccount","getWeb3NoAccount","useWeb3","library","refEth","useRef","useState","web3","setweb3","useEffect","current","97","56","getAddress","address","getContract","abi","eth","Contract","getBep20Contract","bep20Abi","getSellPubliContract","sellPublic","addresses","useSellPubliContract","useMemo","useIDOContract","abiZK","getIDOContract","Status","useDepositSellPublic","sellPubliContract","onDepositSellPublic","txHash","useWithDrawSellPublic","onWithDrawSellPublic","RefreshContext","React","createContext","slow","fast","useRefresh","useContext","fastRefresh","slowRefresh","useCurrentBalance","balance","setBalance","getBalance","data","fetchBalance","calPercentDeposit","totalBNBDeposit","lastSummary","toFixed","useGetInfo","result","setResult","contract","users","call","info","getOrders","orders","getBlockTimestamp","blockTimestamp","percentBNBDeposit","fetchInfo","getBalanceNumber","displayBalance","dividedBy","toNumber","formatNumber","val","stateDefault","infoAccount","addressAccount","totalETHDeposit","totalJUS","toalJUSBlock","totalRefer","referLevel","totalJUSBlock","addressRefer","totalETHDefault","totalETH","amountETH","currentPriceJus","listOrder","paging","total","index","transactionsPending","order","objCol","copied","valueAcc","iconCoppy","Store","createStore","initialState","actions","changeMaxInput","setState","getState","updateTotalETH","changeInput","e","isMax","target","parseFloat","useHookSale","createHook","createContainer","onInit","createSubscriber","Header","state","setPendingTx","document","body","addressWallet","addressWallet1","slice","addressWallet2","substr","concat","href","src","height","alt","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","isMobile","text","Forms","pendingtx","setOrderId","isWithDraw","nextMonth","handleDeposit","handleWithDraw","_handleWithDraw","style","paddingTop","color","display","textAlign","htmlFor","cursor","title","spellCheck","readOnly","onChange","totalBSCS","totalBSCSBlock","opacity","transition","rel","backgroundColor","fontWeight","width","scope","map","item","i","moment","unix","format","amountBSCS","amountBSCSBlock","StoreProjects","idoList","getProject","Promise","resolve","reject","axios","post","then","res","useHookProjects","ItemProject","status","socical","zkchaos","twitter","telegram","medium","unit","swapAmount","totalSupply","usdPrice","maxAllocation","minAllocation","accessType","Projects","prop","data-aos-easing","data-aos-duration","data-aos-delay","config","EXPONENTIAL_AT","DECIMAL_PLACES","BASE_EXCHANGE_URL","BUSD_TOKEN","API_NFT","StoreDetail","objData","active","classTb1","classTb2","classTb3","listAllocations","objJoin","busd","isJionPool","yourAllocations","addJoinPool","obj","ido_Id","ownerAddress","txnhash","blockHash","checkJoinPool","getProjectDetail","getYourAllocations","token","activeTable1","activeTable2","activeTable3","useHookDetail","TableAllocations","role","TableInfo","data-mdb-toggle","tokenDistribution","softCap","description","_joinPool","busdContract","to","args","transfer","gasLimit","_withDrawToken","poolContract","claim","_isClaim","Banner","balClaimed","setBalClaimed","loading","setLoading","loadingClaim","setLoadingClaim","tokenAddress","balanceOf","useTokenBalance","useERC20","idoContract","match","idoId","checkJoin","shortDescription","data-bs-toggle","data-bs-target","disabled","amtJoin","catch","alert","_handleJoinPool","Detail","listRoute","App","Global","exact","path","component","strict","memo","CACHE_KEY","ThemeContext","isDark","toggleTheme","ThemeContextProvider","children","isDarkUserSetting","localStorage","getItem","JSON","parse","setIsDark","Provider","prevState","setItem","stringify","dark","light","blockSlice","createSlice","blockNumber","reducers","setBlock","_","action","payload","configureStore","devTools","reducer","block","blockReducer","Providers","store","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.96e3c418.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components'\n// eslint-disable-next-line import/no-unresolved\nimport { PancakeTheme } from '@pancakeswap-libs/uikit/dist/theme'\n\ndeclare module 'styled-components' {\n  /* eslint-disable @typescript-eslint/no-empty-interface */\n  export interface DefaultTheme extends PancakeTheme {}\n}\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    font-family: 'Kanit', sans-serif;\n  }\n  body {\n    background-color: ${({ theme }) => theme.colors.background};\n\n    img {\n      height: auto;\n      max-width: 100%;\n    }\n  }\n`\n\nexport default GlobalStyle\n","import { createBrowserHistory } from 'history'\n\n// Manually create the history object so we can access outside the Router e.g. in modals\nconst history = createBrowserHistory()\n\nexport default history\n","import random from 'lodash/random'\n\n// Array of available nodes to connect to\nexport const nodes = [process.env.REACT_APP_NODE_1, process.env.REACT_APP_NODE_2, process.env.REACT_APP_NODE_3]\n\nconst getNodeUrl = () => {\n  const randomIndex = random(0, nodes.length - 1)\n  return nodes[randomIndex]\n}\n\nexport default getNodeUrl\n","import { InjectedConnector } from '@web3-react/injected-connector'\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector'\nimport { BscConnector } from '@binance-chain/bsc-connector'\nimport { ConnectorNames } from '@pancakeswap-libs/uikit'\nimport Web3 from 'web3'\nimport getNodeUrl from './getRpcUrl'\n\nconst POLLING_INTERVAL = 12000\nconst rpcUrl = getNodeUrl()\nconst chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\n\nconst injected = new InjectedConnector({ supportedChainIds: [chainId] })\n\nconst walletconnect = new WalletConnectConnector({\n  rpc: { [chainId]: rpcUrl },\n  bridge: 'https://bridge.walletconnect.org',\n  qrcode: true,\n  pollingInterval: POLLING_INTERVAL,\n})\n\nconst bscConnector = new BscConnector({ supportedChainIds: [chainId] })\n\nexport const connectorsByName: { [connectorName in ConnectorNames]: any } = {\n  [ConnectorNames.Injected]: injected,\n  [ConnectorNames.WalletConnect]: walletconnect,\n  [ConnectorNames.BSC]: bscConnector,\n}\n\nexport const getLibrary = (provider): Web3 => {\n  return provider\n}\n","// Set of helper functions to facilitate wallet setup\n\nimport { nodes } from './getRpcUrl'\n\n/**\n * Prompt the user to add BSC as a network on Metamask, or switch to BSC if the wallet is on a different network\n * @returns {boolean} true if the setup succeeded, false otherwise\n */\nexport const setupNetwork = async () => {\n  const provider = (window as WindowChain).ethereum\n  if (provider) {\n    const chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\n    try {\n      await provider.request({\n        method: 'wallet_addEthereumChain',\n        params: [\n          {\n            chainId: `0x${chainId.toString(16)}`,\n            chainName: 'Binance Smart Chain Mainnet',\n            nativeCurrency: {\n              name: 'BNB',\n              symbol: 'bnb',\n              decimals: 18,\n            },\n            rpcUrls: nodes,\n            blockExplorerUrls: ['https://bscscan.com/'],\n          },\n        ],\n      })\n      return true\n    } catch (error) {\n      console.error(error)\n      return false\n    }\n  } else {\n    console.error(\"Can't setup the BSC network on metamask because window.ethereum is undefined\")\n    return false\n  }\n}\n\n/**\n * Prompt the user to add a custom token to metamask\n * @param tokenAddress\n * @param tokenSymbol\n * @param tokenDecimals\n * @param tokenImage\n * @returns {boolean} true if the token has been added, false otherwise\n */\nexport const registerToken = async (\n  tokenAddress: string,\n  tokenSymbol: string,\n  tokenDecimals: number,\n  tokenImage: string,\n) => {\n  const tokenAdded = await (window as WindowChain).ethereum.request({\n    method: 'wallet_watchAsset',\n    params: {\n      type: 'ERC20',\n      options: {\n        address: tokenAddress,\n        symbol: tokenSymbol,\n        decimals: tokenDecimals,\n        image: tokenImage,\n      },\n    },\n  })\n\n  return tokenAdded\n}\n","import { useCallback } from 'react'\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\nimport { ConnectorNames } from '@pancakeswap-libs/uikit'\nimport { connectorsByName } from 'utils/web3React'\nimport { setupNetwork } from 'utils/wallet'\n\nconst useAuth = () => {\n  const { activate, deactivate } = useWeb3React()\n\n  const login = useCallback((connectorID: ConnectorNames) => {\n    const connector = connectorsByName[connectorID]\n    if (connector) {\n      activate(connector, async (error: Error) => {\n        if (error instanceof UnsupportedChainIdError) {\n          const hasSetup = await setupNetwork()\n          if (hasSetup) {\n            activate(connector)\n          }\n        }\n      })\n    } \n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  return { login, logout: deactivate }\n}\n\nexport default useAuth\n","import React from 'react'\nimport { Button, useWalletModal } from '@pancakeswap-libs/uikit'\nimport useAuth from 'hooks/useAuth'\n\nconst UnlockButton = (props:any) => {\n  const { login, logout } = useAuth()\n  const { onPresentConnectModal } = useWalletModal(login, logout)\n  // test\n  return (\n    <Button className=\"navbar-btn btn btn-sm btn-primary lift ml-auto\" onClick={onPresentConnectModal} {...props}>\n      Unlock Wallet\n    </Button>\n  )\n}\n\nexport default UnlockButton\n","import BigNumber from \"bignumber.js\";\nimport { ethers } from \"ethers\";\n\nexport const approve = async (lpContract, masterChefContract, account) => {\n  return lpContract.methods\n    .approve(masterChefContract.options.address, ethers.constants.MaxUint256)\n    .send({ from: account });\n};\n\nexport const depositSellPublic = async (\n  amount,\n  sellPublicContract,\n  account\n) => {\n  const amountTemp = new BigNumber(amount)\n    .times(new BigNumber(10).pow(18))\n    .toString();\n  const gas = await sellPublicContract.methods\n    .deposit()\n    .estimateGas({ from: account, value: amountTemp });\n  return sellPublicContract.methods\n    .deposit()\n    .send({ from: account, gas, value: amountTemp })\n    .on(\"transactionHash\", (tx) => {\n      console.log(\"tx>>\", tx);\n      return tx.transactionHash;\n    });\n};\n\nexport const withDrawSellPublic = async (\n  orderId,\n  sellPublicContract,\n  account\n) => {\n  return sellPublicContract.methods\n    .withDraw(orderId)\n    .send({ from: account })\n    .on(\"transactionHash\", (tx) => {\n      return tx.transactionHash;\n    });\n};\n\nexport const claim = async (idoContract, amount, account) => {\n  console.log(\"idoContract>>\", idoContract, amount, account);\n  const amountTemp = new BigNumber(amount)\n    .times(new BigNumber(10).pow(18))\n    .toString();\n\n  const gas = await idoContract.methods\n    .claim(amountTemp)\n    .estimateGas({ from: account });\n  console.log(\"gas>>\", gas);\n  return idoContract.methods.claim(amountTemp).send({ from: account, gas });\n};\n","import Web3 from 'web3'\nimport { HttpProviderOptions } from 'web3-core-helpers'\nimport getRpcUrl from 'utils/getRpcUrl'\n\nconst RPC_URL = getRpcUrl()\nconst httpProvider = new Web3.providers.HttpProvider(RPC_URL, { timeout: 10000 } as HttpProviderOptions)\nconst web3NoAccount = new Web3(httpProvider)\n\nconst getWeb3NoAccount = () => {\n  return web3NoAccount\n}\n\nexport { getWeb3NoAccount }\nexport default web3NoAccount\n","import { useEffect, useState, useRef } from 'react'\nimport Web3 from 'web3'\nimport { useWeb3React } from '@web3-react/core'\nimport { getWeb3NoAccount } from 'utils/web3'\n\n/**\n * Provides a web3 instance using the provider provided by useWallet\n * with a fallback of an httpProver\n * Recreate web3 instance only if the provider change\n */\nconst useWeb3 = () => {\n  const { library } = useWeb3React()\n  const refEth = useRef(library)\n  const [web3, setweb3] = useState(library ? new Web3(library) : getWeb3NoAccount())\n\n  useEffect(() => {\n    if (library !== refEth.current) {\n      setweb3(library ? new Web3(library) : getWeb3NoAccount())\n      refEth.current = library\n    }\n  }, [library])\n  return web3\n}\n\nexport default useWeb3\n","export default {\n  sellPublic: {\n    97: '0x3651b2D5A407dE9F71442c470B961EE8Bf4Bb724',\n    56: '0xF802F854F9800167DcA593f0D138Ff76F6D3Be45',\n  },\n  cake: {\n    97: '0xa35062141Fa33BCA92Ce69FeD37D0E8908868AAe',\n    56: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n  },\n  syrup: {\n    97: '0xfE1e507CeB712BDe086f3579d2c03248b2dB77f9',\n    56: '0x009cF7bC57584b7998236eff51b98A168DceA9B0',\n  },\n  masterChef: {\n    97: '0x1d32c2945C8FDCBc7156c553B7cEa4325a17f4f9',\n    56: '0x73feaa1eE314F8c655E354234017bE2193C9E24E',\n  },\n  sousChef: {\n    97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\n    56: '0x6ab8463a4185b80905e05a9ff80a2d6b714b9e95',\n  },\n  wbnb: {\n    97: '0xae13d989dac2f0debff460ac112a837c89baa7cd',\n    56: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\n  },\n  lottery: {\n    97: '0x99c2EcD51d52c036B00130d882Bc65f20Fdecf9f',\n    56: '0x3C3f2049cc17C136a604bE23cF7E42745edf3b91',\n  },\n  lotteryNFT: {\n    97: '0x8175c10383511b3a1C68f9dB222dc14A19CC950e',\n    56: '0x5e74094Cd416f55179DBd0E45b1a8ED030e396A1',\n  },\n  mulltiCall: {\n    56: '0x1ee38d535d541c55c9dae27b12edf090c608e6fb',\n    97: '0x67ADCB4dF3931b0C5Da724058ADC2174a9844412',\n  },\n  busd: {\n    56: '0xe9e7cea3dedca5984780bafc599bd69add087d56',\n    97: '',\n  },\n  ust: {\n    56: '0x23396cF899Ca06c4472205fC903bDB4de249D6fC',\n    97: '',\n  },\n  pancakeProfile: {\n    56: '0xDf4dBf6536201370F95e06A0F8a7a70fE40E388a',\n    97: '0x4B683C7E13B6d5D7fd1FeA9530F451954c1A7c8A',\n  },\n  pancakeRabbits: {\n    56: '0xDf7952B35f24aCF7fC0487D01c8d5690a60DBa07',\n    97: '0x60935F36e4631F73f0f407e68642144e07aC7f5E',\n  },\n  bunnyFactory: {\n    56: '0xfa249Caa1D16f75fa159F7DFBAc0cC5EaB48CeFf',\n    97: '0x707CBF373175fdB601D34eeBF2Cf665d08f01148',\n  },\n  eth: {\n    56: '0x2170ed0880ac9a755fd29b2688956bd959f933f8',\n    97: '',\n  },\n  claimRefund: {\n    56: '0xE7e53A7e9E3Cf6b840f167eF69519175c497e149',\n    97: '',\n  },\n  pointCenterIfo: {\n    56: '0x3C6919b132462C1FEc572c6300E83191f4F0012a',\n    97: '0xd2Ac1B1728Bb1C11ae02AB6e75B76Ae41A2997e3',\n  },\n  bunnySpecial: {\n    56: '0xFee8A195570a18461146F401d6033f5ab3380849',\n    97: '0x7b7b1583De1DeB32Ce6605F6deEbF24A0671c17C',\n  },\n}\n","import addresses from 'config/constants/contracts'\nimport { Address } from 'config/constants/types'\n\nexport const getAddress = (address: Address): string => {\n  const mainNetChainId = 56\n  const chainId = process.env.REACT_APP_CHAIN_ID\n  return address[chainId] ? address[chainId] : address[mainNetChainId]\n}\nexport const getSellPublicAddress = () => {\n  return getAddress(addresses.sellPublic)\n}\n\nexport const getMulticallAddress = () => {\n  return getAddress(addresses.mulltiCall)\n}\nexport const getWbnbAddress = () => {\n  return getAddress(addresses.wbnb)\n}","import Web3 from \"web3\";\nimport { AbiItem } from \"web3-utils\";\nimport web3NoAccount from \"utils/web3\";\n\n// Addresses\nimport { getSellPublicAddress } from \"utils/addressHelpers\";\n\nimport bep20Abi from \"config/abi/erc20.json\";\nimport sellPublic from \"config/abi/sellPublic.json\";\nimport abiZK from \"config/abi/abiZK.json\";\n\nexport const getContract = (abi: any, address: string, web3?: Web3) => {\n  const _web3 = web3 ?? web3NoAccount;\n  return new _web3.eth.Contract((abi as unknown) as AbiItem, address, {\n    from: \"0xB4e33AD321A173ce89067904e77413c862Bf41B6\",\n  });\n};\n\nexport const getBep20Contract = (address: string, web3?: Web3) => {\n  return getContract(bep20Abi, address, web3);\n};\nexport const getSellPubliContract = (web3?: Web3) => {\n  return getContract(sellPublic, getSellPublicAddress(), web3);\n};\nexport const getIDOContract = (web3?: Web3) => {\n  return getContract(abiZK, \"0xed3d91d67adc3f2e265ac0f327c049be9aad7d58\", web3);\n};\n","import { useMemo } from \"react\";\nimport { Contract } from \"@ethersproject/contracts\";\n\nimport useWeb3 from \"hooks/useWeb3\";\nimport abiZK from \"config/abi/abiZK.json\";\nimport abiBUSD from \"config/abi/abiBUSD.json\";\nimport {\n  getBep20Contract,\n  getSellPubliContract,\n  getContract,\n  getIDOContract,\n} from \"utils/contractHelpers\";\n\nfunction useContract(address: string | undefined, ABI: any): any {\n  return useMemo(() => {\n    try {\n      return getContract(ABI, address);\n    } catch (error) {\n      console.error(\"Failed to get contract\", error);\n      return null;\n    }\n  }, [address, ABI]);\n}\n\nexport const useERC20 = (address: string) => {\n  const web3 = useWeb3();\n  return useMemo(() => getBep20Contract(address, web3), [address, web3]);\n};\n\nexport const useSellPubliContract = () => {\n  const web3 = useWeb3();\n  return useMemo(() => getSellPubliContract(web3), [web3]);\n};\n\nexport function useIDOContract(): any {\n  const web3 = useWeb3();\n  return useMemo(() => getIDOContract(web3), [web3]);\n}\n\nexport function useBUSDContract(address): any {\n  return useContract(address, abiBUSD);\n}\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\n\nimport { depositSellPublic } from 'utils/callHelpers'\nimport { useSellPubliContract } from './useContract'\n\nconst useDepositSellPublic = (amount) => {\n  const { account } = useWeb3React()\n  const sellPubliContract = useSellPubliContract()\n  const handleDepositSellPublic = useCallback(async () => {\n    try {\n      const txHash = await depositSellPublic(amount, sellPubliContract, account)\n      return txHash\n    } catch (e) {\n      return false\n    }\n  }, [account, sellPubliContract, amount])\n\n  return { onDepositSellPublic: handleDepositSellPublic }\n}\nexport default useDepositSellPublic\n","export const listPercent = ['10%', '10%', '20%', '20%', '30%']\nexport const listMilestone = [1, 2, 3, 4, 5]\nexport enum Status {\n    lock = 'lock',\n    unlock = 'unlock',\n    completed = 'completed',\n    pending = 'pending'\n}\nexport const addressAdminRefer = '0x701D8BDEF1955f74F741fdae7d0cC36e10991456'\nexport const NUM_MONTH_WITHDRAW = [15, 15, 30, 30, 90]","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\n\nimport { withDrawSellPublic } from 'utils/callHelpers'\nimport { useSellPubliContract } from './useContract'\n\nconst useWithDrawSellPublic = (orderId) => {\n  const { account } = useWeb3React()\n  const sellPubliContract = useSellPubliContract()\n\n  const handleWithDrawSellPublic = useCallback(async () => {\n    try {\n      const txHash = await withDrawSellPublic(orderId, sellPubliContract, account)\n      return txHash\n    } catch (e) {\n      return false\n    }\n  }, [account, sellPubliContract, orderId])\n\n  return { onWithDrawSellPublic: handleWithDrawSellPublic }\n}\nexport default useWithDrawSellPublic\n","import React, { useState, useEffect } from 'react'\n\nconst FAST_INTERVAL = 10000\nconst SLOW_INTERVAL = 60000\n\nconst RefreshContext = React.createContext({ slow: 0, fast: 0 })\n\n// This context maintain 2 counters that can be used as a dependencies on other hooks to force a periodic refresh\nconst RefreshContextProvider = ({ children }) => {\n  const [slow, setSlow] = useState(0)\n  const [fast, setFast] = useState(0)\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      setFast((prev) => prev + 1)\n    }, FAST_INTERVAL)\n    return () => clearInterval(interval)\n  }, [])\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      setSlow((prev) => prev + 1)\n    }, SLOW_INTERVAL)\n    return () => clearInterval(interval)\n  }, [])\n\n  return <RefreshContext.Provider value={{ slow, fast }}>{children}</RefreshContext.Provider>\n}\n\nexport { RefreshContext, RefreshContextProvider }\n","import { useContext } from 'react'\nimport { RefreshContext } from 'contexts/RefreshContext'\n\nconst useRefresh = () => {\n  const { fast, slow } = useContext(RefreshContext)\n  return { fastRefresh: fast, slowRefresh: slow }\n}\n\nexport default useRefresh\n","import { useEffect, useState } from \"react\";\nimport BigNumber from \"bignumber.js\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { getBep20Contract, getSellPubliContract } from \"utils/contractHelpers\";\n\nimport useWeb3 from \"./useWeb3\";\nimport useRefresh from \"./useRefresh\";\n\nexport const useTokenBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(new BigNumber(0));\n  const { account } = useWeb3React();\n  const web3 = useWeb3();\n  const { fastRefresh } = useRefresh();\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress, web3);\n      console.log(\"contract>>\", contract);\n      const res = await contract.methods.balanceOf(account).call();\n      setBalance(new BigNumber(res));\n    };\n\n    if (account) {\n      fetchBalance();\n    }\n  }, [account, tokenAddress, web3, fastRefresh]);\n\n  return balance;\n};\n\nexport const useCurrentBalance = () => {\n  const [balance, setBalance] = useState(new BigNumber(0));\n  const { account } = useWeb3React();\n  const web3 = useWeb3();\n  const { fastRefresh } = useRefresh();\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const data = await web3.eth.getBalance(account);\n      setBalance(new BigNumber(data));\n    };\n\n    if (account) {\n      fetchBalance();\n    }\n  }, [account, web3, fastRefresh]);\n\n  return balance;\n};\n\nexport const useBurnedBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(new BigNumber(0));\n  const { slowRefresh } = useRefresh();\n  const web3 = useWeb3();\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress, web3);\n      const res = await contract.methods\n        .balanceOf(\"0x000000000000000000000000000000000000dEaD\")\n        .call();\n      setBalance(new BigNumber(res));\n    };\n\n    fetchBalance();\n  }, [web3, tokenAddress, slowRefresh]);\n\n  return balance;\n};\nconst calPercentDeposit = (totalBNBDeposit, lastSummary = 486) => {\n  return ((totalBNBDeposit / 1e18 / lastSummary) * 100).toFixed(3);\n};\n\nexport const useGetInfo = () => {\n  const [result, setResult] = useState({});\n  const { account } = useWeb3React();\n  const web3 = useWeb3();\n  const { fastRefresh } = useRefresh();\n\n  useEffect(() => {\n    const fetchInfo = async () => {\n      const contract = getSellPubliContract(web3);\n      const info = await contract.methods\n        .users(account)\n        .call({ from: account });\n      const orders = await contract.methods\n        .getOrders(account)\n        .call({ from: account });\n      const blockTimestamp = await contract.methods\n        .getBlockTimestamp()\n        .call({ from: account });\n      const totalBNBDeposit = await contract.methods\n        .totalBNBDeposit()\n        .call({ from: account });\n      setResult({\n        blockTimestamp,\n        info,\n        orders,\n        percentBNBDeposit: calPercentDeposit(totalBNBDeposit),\n        totalBNBDeposit: (totalBNBDeposit / 1e18).toFixed(3),\n      });\n    };\n    if (account) {\n      fetchInfo();\n    }\n  }, [account, web3, fastRefresh]);\n\n  return result;\n};\n","import BigNumber from 'bignumber.js'\n\nexport const getBalanceNumber = (balance: BigNumber, decimals = 18) => {\n  const displayBalance = new BigNumber(balance).dividedBy(new BigNumber(10).pow(decimals))\n  return displayBalance.toNumber()\n}\n\nexport const getFullDisplayBalance = (balance: BigNumber, decimals = 18) => {\n  return balance.dividedBy(new BigNumber(10).pow(decimals)).toFixed()\n}\n","import moment from 'moment'\nimport { Status, NUM_MONTH_WITHDRAW } from '../constants'\n\nexport const formatNumber = (val) => {\n    return (val / 1e18).toFixed(8)\n}\nexport const getNextDay = (createdDate, timestampLastWithDraw, objCol) => {\n    let index = 0;\n    objCol.forEach((item, i) => {\n        if (index === 0 && item.status === 'lock') index = i\n    });\n    return moment.unix(timestampLastWithDraw).add('days', NUM_MONTH_WITHDRAW[index]).format('DD/MM/YYYY h:mm:ss')\n}\n\nexport const getClassWithDraw = (\n    status,\n    timestampLastWithDraw,\n    index\n) => {\n    let disabled = true\n    let classStatus = Status.lock\n    if (status === 'true') {\n        classStatus = Status.completed\n    } else if (moment.unix(timestampLastWithDraw).add('days', NUM_MONTH_WITHDRAW[index]).isSameOrBefore(moment())) {\n        classStatus = Status.unlock\n        disabled = false\n    }\n    return {\n        classStatus,\n        disabled,\n    }\n}\n\nexport const filterDataOrder = (data, index) => {\n    let dataSort = Array.from(data).sort((a, b) => b.id - a.id)\n    dataSort = dataSort.filter((x) => x.amountETH > 0)\n    // paging list\n    dataSort = dataSort.slice(index * 5, (index + 1) * 5);\n    return dataSort;\n}\nexport const currencyFormat = (num) => {\n    return num.toFixed(2).replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,')\n}\n","import { createStore, createHook, createContainer, createSubscriber } from 'react-sweet-state'\nimport { getClassWithDraw, formatNumber } from './utils'\nimport { addressAdminRefer, Status, listMilestone, listPercent } from './constants'\n\nconst stateDefault = {\n  infoAccount: {\n    addressAccount: '',\n    totalETHDeposit: 0,\n    totalJUS: 0,\n    toalJUSBlock: 0,\n    totalRefer: 0,\n    referLevel: 0,\n    totalJUSBlock: 0,\n    addressRefer: addressAdminRefer,\n  },\n  totalETHDefault: 0,\n  totalETH: null,\n  amountETH: null,\n  currentPriceJus: 0,\n  listOrder: [],\n  paging: {\n    total: 0,\n    index: 0,\n  },\n  transactionsPending: [],\n  order: {},\n  objCol: {},\n  copied: false,\n  valueAcc:'',\n  iconCoppy:'../img/icons/social/coppied.png'\n}\nconst Store = createStore({\n  initialState: { ...stateDefault },\n  actions: {\n    changeMaxInput: () => ({ setState, getState }) => {\n      const estimates =0;\n      setState({\n        amountETH: (getState().totalETHDefault - estimates).toFixed(8),\n        totalETH: 0,\n      })\n    },\n    updateTotalETH: (amount) => ({ setState }) => {\n      console.log('format',formatNumber(amount))\n      setState({\n        totalETH: formatNumber(amount),\n        totalETHDefault: formatNumber(amount),\n      })\n    },\n    changeInput: (e, isMax) => ({ setState, getState }) => {\n      let amount= e.target.value;\n      if(amount && parseFloat(amount)>0){\n        amount =parseFloat(amount);\n      }\n      if (parseFloat(amount) > parseFloat(getState().totalETHDefault)) {\n        setState({\n          amountETH: 0,\n          totalETH: getState().totalETHDefault,\n        })\n      } else if (amount > 0) {\n        setState({\n          amountETH: amount,\n          totalETH: (getState().totalETHDefault - amount).toFixed(8),\n        })\n      } else {\n        setState({\n          amountETH: amount,\n          totalETH: getState().totalETHDefault,\n        })\n      }\n    },\n  },\n  name: 'Sale Store',\n})\nexport const useHookSale = createHook(Store)\nexport const Container = createContainer(Store, {\n  onInit: () => ({ setState }, props) => {\n    setState({ ...props })\n  },\n})\nexport const Subscriber = createSubscriber(Store)\n","/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React, { useState, useCallback, useEffect } from \"react\";\nimport \"../../index.css\";\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\n\nimport moment from \"moment\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport UnlockButton from \"components/UnlockButton\";\nimport useDepositSellPublic from \"hooks/useDepositSellPublic\";\nimport useWithDrawSellPublic from \"hooks/useWithDrawSellPublic\";\nimport { useCurrentBalance, useGetInfo } from \"hooks/useSellHelpers\";\nimport { getBalanceNumber } from \"utils/formatBalance\";\nimport { isMobile } from \"react-device-detect\";\nimport { useHookSale } from \"../../Store\";\n\n\n\n\n/* eslint-disable react/button-has-type */\nconst Header = () => {\n\n  const [state, actions] = useHookSale();\n  const [pendingtx, setPendingTx] = useState(false);\n\n  const [orderId, setOrderId] = useState(-1);\n\n  const { totalETH, listOrder, amountETH, currentPriceJus } = state;\n\n  const { account } = useWeb3React();\n  const { onDepositSellPublic } = useDepositSellPublic(amountETH);\n  const { onWithDrawSellPublic } = useWithDrawSellPublic(orderId);\n\n  const isWithDraw = (nextMonth, blockTimestamp) =>\n    parseInt(blockTimestamp) >= parseInt(nextMonth);\n\n  const handleDeposit = useCallback(async () => {\n    setPendingTx(true);\n    try {\n      const txHash = await onDepositSellPublic();\n      console.log(\"handleDeposit\", txHash);\n      if (txHash) {\n        setPendingTx(false);\n      }\n    } catch (error) {\n      // TODO: find a way to handle when the user rejects transaction or it fails\n    } finally {\n      setPendingTx(false);\n    }\n  }, [onDepositSellPublic, setPendingTx]);\n\n  const handleWithDraw = useCallback(async () => {\n    try {\n      await onWithDrawSellPublic();\n    } catch (e) {\n      console.error(e);\n    }\n  }, [onWithDrawSellPublic]);\n\n  const balance = useCurrentBalance();\n  const {\n    percentBNBDeposit,\n    totalBNBDeposit,\n    blockTimestamp,\n    info,\n    orders,\n  }: any = useGetInfo();\n  useEffect(() => {\n    document.body.className = \"\";\n\n    actions.updateTotalETH(balance);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [orders]);\n\n  const _handleWithDraw = async (order) => {\n    if (isWithDraw(order.nextMonth, blockTimestamp)) {\n      setOrderId(order.id);\n      await handleWithDraw();\n    }\n  };\n  let addressWallet = '';\n\n\n  console.log(\"account: \", account)\n\n  if (account) {\n    const addressWallet1 = account.slice(0, 5);\n    const addressWallet2 = account.substr(-5);\n    addressWallet = addressWallet1.concat(\"...\", addressWallet2)\n  }\n  \n  // const onCopy = () => {\n  //   state.copied = true\n  // }\n  const onClick = () => {\n    state.valueAcc = account\n   // state.copied = !state.copied\n   \n    // if(state.copied){\n    //   state.iconCoppy=\"../img/icons/social/copy.png\"\n    // }else{\n    //   state.iconCoppy=\"../img/icons/social/coppied.png\"\n    // }\n    \n  }\n\n\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-light\">\n      <div className=\"container\">\n        {/* Brand */}\n        <a className=\"navbar-brand\" href=\"/\">\n          <img\n            src=\"/img/logo-dark.png?v=0.1\"\n            height=\"40px\"\n            className=\"navbar-brand-img-buytoken\"\n            alt=\"...\"\n          />\n        </a>\n        {/* Toggler */}\n        <button\n          className=\"navbar-toggler collapsed\"\n          type=\"button\"\n          data-toggle=\"collapse\"\n          data-target=\"#navbarCollapse\"\n          aria-controls=\"navbarCollapse\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\" />\n        </button>\n        {/* Collapse */}\n        <div className=\"navbar-collapse collapse\" id=\"navbarCollapse\">\n          {/* Toggler */}\n          <button\n            className=\"navbar-toggler collapsed\"\n            type=\"button\"\n            data-toggle=\"collapse\"\n            data-target=\"#navbarCollapse\"\n            aria-controls=\"navbarCollapse\"\n            aria-expanded=\"false\"\n            aria-label=\"Toggle navigation\"\n          >\n            <i className=\"fe fe-x\" />\n          </button>\n          {/* Navigation */}\n          {/* Button */}\n          {account ? (\n            <>\n              <a\n                className=\"navbar-btn btn btn-sm btn-primary lift ml-auto\"\n                href=\"/\"\n              >\n                {isMobile ? \"\" : addressWallet}\n              </a>\n              <CopyToClipboard\n                text={account}>\n                <button className=\"btn-coppy\" onClick={onClick}> <img src={state.iconCoppy}\n                  className=\"list-social-icon-coppy\" alt=\"...\" />\n                  </button>\n                \n              </CopyToClipboard>\n              \n            </>\n          ) : (\n            <UnlockButton />\n          )}\n\n          {/* {state.copied ? <span style={{color: 'red'}}>Copied.</span> : null} */}\n        </div>\n      </div>\n    </nav>\n  )\n}\n\nexport default Header;","/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React, { useState, useCallback, useEffect } from \"react\";\nimport \"../index.css\";\n\nimport moment from \"moment\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport UnlockButton from \"components/UnlockButton\";\nimport useDepositSellPublic from \"hooks/useDepositSellPublic\";\nimport useWithDrawSellPublic from \"hooks/useWithDrawSellPublic\";\nimport { useCurrentBalance, useGetInfo } from \"hooks/useSellHelpers\";\nimport { getBalanceNumber } from \"utils/formatBalance\";\nimport { isMobile } from \"react-device-detect\";\nimport { useHookSale } from \"../Store\";\n\nimport Header from \"./common/Header\"\n\n/* eslint-disable react/button-has-type */\nconst Forms = () => {\n  const [state, actions] = useHookSale();\n  const [pendingtx, setPendingTx] = useState(false);\n\n  const [orderId, setOrderId] = useState(-1);\n\n  const { totalETH, listOrder, amountETH, currentPriceJus } = state;\n\n  const { account } = useWeb3React();\n  const { onDepositSellPublic } = useDepositSellPublic(amountETH);\n  const { onWithDrawSellPublic } = useWithDrawSellPublic(orderId);\n\n  const isWithDraw = (nextMonth, blockTimestamp) =>\n    parseInt(blockTimestamp) >= parseInt(nextMonth);\n\n  const handleDeposit = useCallback(async () => {\n    setPendingTx(true);\n    try {\n      const txHash = await onDepositSellPublic();\n      console.log(\"handleDeposit\", txHash);\n      if (txHash) {\n        setPendingTx(false);\n      }\n    } catch (error) {\n      // TODO: find a way to handle when the user rejects transaction or it fails\n    } finally {\n      setPendingTx(false);\n    }\n  }, [onDepositSellPublic, setPendingTx]);\n\n  const handleWithDraw = useCallback(async () => {\n    try {\n      await onWithDrawSellPublic();\n    } catch (e) {\n      console.error(e);\n    }\n  }, [onWithDrawSellPublic]);\n\n  const balance = useCurrentBalance();\n  const {\n    percentBNBDeposit,\n    totalBNBDeposit,\n    blockTimestamp,\n    info,\n    orders,\n  }: any = useGetInfo();\n  useEffect(() => {\n    document.body.className = \"\";\n\n    actions.updateTotalETH(balance);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [orders]);\n\n  const _handleWithDraw = async (order) => {\n    if (isWithDraw(order.nextMonth, blockTimestamp)) {\n      setOrderId(order.id);\n      await handleWithDraw();\n    }\n  };\n  let addressWallet = '';\n  if (account) {\n    addressWallet = `${account.substr(0, 15)}...${account.substr(account.length - 9)}`\n  }\n  \n  return (\n    <div>\n     \n     <Header />\n      <section className=\"section-border border-primary bg-map\">\n        <div className=\"container d-flex flex-column\">\n          <div\n            className=\"row align-items-center justify-content-center no-gutters\"\n            style={{ paddingTop: \"100px\" }}\n          >\n            <div className=\"col-12 col-md-5 col-lg-4\">\n              {/* Heading */}\n              <div className=\"mb-0 font-weight-bold text-center\">\n                <a className=\"navbar-brand\" href=\"/\">\n                  {/* <img src=\"/img/logo-dark.png\" className=\"navbar-brand-img\" alt=\"...\"> */}\n                </a>\n              </div>\n              {/* Text */}\n              {/* Form */}\n              <div className=\"mb-9\">\n                <div className=\"sc-dQppl kmMvoB sc-hYAvag jfgTmU\">\n                  <div id=\"swap-page\" className=\"sc-dRPiIx esbyIi\">\n                    <div className=\"sc-fXvjs darEnv\">\n                      <div className=\"sc-eCssSg sc-jSgupP eNboqf ggLwEG\">\n                        <div className=\"sc-bTvRPi sc-hOqqkJ sc-dtwoBo cchpWM hWkaVx inCwUZ\">\n                          <div color=\"text\" className=\"sc-gsTCUz\">\n                            0.00353 BNB\n                          </div>\n                          <div\n                            color=\"text\"\n                            className=\"sc-gsTCUz\"\n                            style={{ display: \"inline\" }}\n                          >\n                            ≈ 1 BSCS\n                          </div>\n                        </div>\n                        <img\n                          src=\"/img/logobscs.png?v=0.1\" className=\"navbar-brand-img\" style={{ height: \"30px\" }} alt=\"...\"\n                        />\n                      </div>\n\n\n                      <div className=\"sc-JAcuL rhuht\">\n                        {account ? (\n                          <span>{isMobile && addressWallet}</span>\n                        ) : (\n                          isMobile && <UnlockButton />\n                        )}\n                      </div>\n                      <ul className=\"list-unstyled list-inline list-social mb-3 mt-3 mb-md-0\" style={{ textAlign: \"center\" }} >\n                        <li className=\"list-inline-item list-social-item mr-3\">\n                          <a href=\"https://twitter.com/bscstation\" className=\"text-decoration-none\">\n                            <img src=\"/img/icons/social/twitter.png\" className=\"list-social-icon\" alt=\"...\" />\n                          </a>\n                        </li>\n                        <li className=\"list-inline-item list-social-item mr-3\">\n                          <a\n                            href=\"https://t.me/bscstation\"\n                            className=\"text-decoration-none\"\n                          >\n                            <img\n                              src=\"/img/icons/social/telegram.png\"\n                              className=\"list-social-icon\"\n                              alt=\"...\"\n                            />\n                          </a>\n                        </li>\n                        <li className=\"list-inline-item list-social-item mr-3\">\n                          <a\n                            href=\"https://bscstation.medium.com/\"\n                            className=\"text-decoration-none\"\n                          >\n                            <img\n                              src=\"/img/icons/social/medium.png\"\n                              className=\"list-social-icon\"\n                              alt=\"...\"\n                            />\n                          </a>\n                        </li>\n                        <li className=\"list-inline-item list-social-item\">\n                          <a\n                            href=\"https://bscstation.zendesk.com/hc/en-us\"\n                            className=\"text-decoration-none\"\n                          >\n                            <img\n                              src=\"/img/icons/social/Zendesk.png\"\n                              className=\"list-social-icon\"\n                              alt=\"...\"\n                            />\n                          </a>\n                        </li>\n                        <li className=\"list-inline-item list-social-item\">\n                          <a\n                            href=\"https://www.youtube.com/channel/UCJg3z-O4X7SCeL3Qccb-0zA/featured\"\n                            className=\"text-decoration-none\"\n                          >\n                            <img\n                              src=\"/img/icons/social/youtube.png\"\n                              className=\"list-social-icon\"\n                              alt=\"...\"\n                            />\n                          </a>\n                        </li>\n                      </ul>\n                    </div>\n                    <div className=\"sc-bqyKva domPRl\">\n                      <div className=\"sc-eLgOdN kubwGS\">\n                        <div\n                          id=\"swap-currency-input\"\n                          className=\"sc-fybufo eORiCX\"\n                        >\n                          <div className=\"sc-iWFSnp dRkbRe\">\n                          <div className=\"form-group-buy\">\n                                  <label htmlFor=\"SelectBuy\">Buy with: </label>\n                                  <select className=\"form-group-buy-select\" >\n                                    <option>USD</option>\n                                    <option>USD1</option> \n                                  </select>\n                                </div>\n                            <div className=\"sc-dkmKpi eAbILx\">\n                             \n                              <div className=\"sc-bTvRPi sc-hOqqkJ sc-dtwoBo cchpWM hWkaVx inCwUZ\">\n                                <div color=\"text\" className=\"sc-gsTCUz cRLXro\">\n                                  Enter the number\n                                </div>\n\n                                <div\n                                  color=\"text\"\n                                  className=\"sc-gsTCUz cRLXro\"\n                                  style={{\n                                    display: \"inline\",\n                                    cursor: \"pointer\",\n                                  }}\n                                >\n                                  Balance: {totalETH}\n                                </div>\n                              </div>\n                            </div>\n                            <div className=\"sc-kmASHI bQNbrd\">\n                              <input\n                                className=\"sc-aKZfe eyCBWg token-amount-input\"\n                                title=\"Token Amount\"\n                                type=\"number\"\n                                spellCheck=\"false\"\n                                readOnly={!account}\n                                onChange={(e) => actions.changeInput(e)}\n                                value={amountETH}\n                              />\n                              <button\n                                className=\"sc-dlfnbm kffJUP\"\n                                onClick={() => actions.changeMaxInput()}\n                              >\n                                MAX\n                              </button>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"sc-JAcuL rhuht\">\n                        {pendingtx ? (\n                          <button className=\"sc-dlfnbm btn-buy \">\n                            Pending\n                          </button>\n                        ) : (\n                          <button\n                            className=\"sc-dlfnbm btn-buy \"\n                            onClick={async () => {\n                              await handleDeposit();\n                            }}\n                          >\n                            Buy\n                          </button>\n                        )}\n                      </div>\n                      <div className=\"sc-iWFSnp dRkbRe\">\n                        <div className=\"sc-dkmKpi eAbILx\">\n                          <div className=\"sc-bTvRPi sc-hOqqkJ sc-dtwoBo cchpWM hWkaVx inCwUZ\">\n                            <div color=\"text\" className=\"sc-gsTCUz balance\">\n                              Balance :\n                            </div>\n                            <div\n                              color=\"text\"\n                              className=\"sc-gsTCUz balance\"\n                              style={{ display: \"inline\" }}\n                            >\n                              {getBalanceNumber(\n                                (info && info.totalBNBDeposit) || 0\n                              ).toFixed(4)}{\" \"}\n                              BNB\n                            </div>\n                          </div>\n                        </div>\n                        <div className=\"sc-dkmKpi eAbILx\">\n                          <div className=\"sc-bTvRPi sc-hOqqkJ sc-dtwoBo cchpWM hWkaVx inCwUZ\">\n                            <div color=\"text\" className=\"sc-gsTCUz balance\">\n                              Total BSCS :\n                            </div>\n                            <div\n                              color=\"text\"\n                              className=\"sc-gsTCUz balance\"\n                              style={{ display: \"inline\" }}\n                            >\n                              {getBalanceNumber(\n                                (info && info.totalBSCS) || 0\n                              ).toFixed(4)}{\" \"}\n                              RECEIVED\n                            </div>\n                          </div>\n                        </div>\n                        <div className=\"sc-dkmKpi eAbILx\">\n                          <div className=\"sc-bTvRPi sc-hOqqkJ sc-dtwoBo cchpWM hWkaVx inCwUZ\">\n                            <div color=\"text\" className=\"sc-gsTCUz balance\">\n                              &nbsp;\n                            </div>\n                            <div\n                              color=\"text\"\n                              className=\"sc-gsTCUz balance\"\n                              style={{ display: \"inline\" }}\n                            >\n                              {getBalanceNumber(\n                                (info && info.totalBSCSBlock) || 0\n                              ).toFixed(4)}{\" \"}\n                              LOCK\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"jss95\">\n            <div\n              className=\"jss96\"\n              style={{\n                opacity: 1,\n                transition: \"opacity 1000ms cubic-bezier(0.4, 0, 0.2, 1) 0ms\",\n              }}\n            >\n              <div className=\"jss101\">\n                <div className=\"jss102\">\n                  <div className=\"jss103\">\n                    <img\n                      className=\"jss104\"\n                      alt=\"pool\"\n                      src=\"/img/logobscs.png?v=0.1\"\n                    />\n                    <div className=\"jss105\">\n                      <h1 className=\"MuiTypography-root jss106 MuiTypography-h1\">\n                        START Public Presale\n                      </h1>\n                      <h5 className=\"MuiTypography-root jss107 MuiTypography-h5\">\n                        Token Address\n                      </h5>\n                      <a\n                        className=\"jss127\"\n                        href=\"https://bscscan.com/token/0xbcb24afb019be7e93ea9c43b7e22bb55d5b7f45d\"\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                      >\n                        <h5 className=\"MuiTypography-root jss108 MuiTypography-h5\">\n                          0xbcb24afb019be7e93ea9c43b7e22bb55d5b7f45d\n                        </h5>\n                      </a>\n                    </div>\n                  </div>\n                  <div className=\"jss109\">\n                    <div\n                      className=\"jss110\"\n                      style={{\n                        backgroundColor: \"#FAC668\",\n                        fontWeight: \"bold\",\n                        color: \"#2b2a28\",\n                      }}\n                      id=\"countdowntime\"\n                    />\n                    <h5 className=\"MuiTypography-root jss111 MuiTypography-h5\">\n                      IDO time: March 20, 2021 09:00 AM\n                    </h5>\n                  </div>\n                </div>\n                <div className=\"jss112\">\n                  <div className=\"jss113\">\n                    <div className=\"jss114\">\n                      <h5 className=\"MuiTypography-root jss115 MuiTypography-h5\">\n                        0.00353 BNB per Token\n                      </h5>\n                      <h5 className=\"MuiTypography-root jss116 MuiTypography-h5\">\n                        0.000 BNB Raised\n                      </h5>\n                    </div>\n                  </div>\n                  <div className=\"jss119\">\n                    <div\n                      className=\"jss120\"\n                      style={{\n                        backgroundColor: \"#FAC668\",\n                        width: `${percentBNBDeposit}%`,\n                      }}\n                    />\n                  </div>\n                  <div className=\"jss121\">\n                    <h5 className=\"MuiTypography-root jss122 MuiTypography-h5\">\n                      0.000%\n                    </h5>\n                    <h5 className=\"MuiTypography-root jss122 MuiTypography-h5\">\n                      {totalBNBDeposit} /&nbsp;486.000 BNB\n                    </h5>\n                  </div>\n                </div>\n                <div className=\"jss123\">\n                  <div className=\"jss124\">\n                    <h5 className=\"MuiTypography-root jss125 MuiTypography-h5\">\n                      Softcap\n                    </h5>\n                    <h5 className=\"MuiTypography-root jss126 MuiTypography-h5\">\n                      200 BNB\n                    </h5>\n                  </div>\n                  <div className=\"jss124\">\n                    <h5 className=\"MuiTypography-root jss125 MuiTypography-h5\">\n                      Min Per Wallet\n                    </h5>\n                    <h5 className=\"MuiTypography-root jss126 MuiTypography-h5\">\n                      0.2 BNB\n                    </h5>\n                  </div>\n                  <div className=\"jss124\">\n                    <h5 className=\"MuiTypography-root jss125 MuiTypography-h5\">\n                      Presale Rate\n                    </h5>\n                    <h5 className=\"MuiTypography-root jss126 MuiTypography-h5\">\n                      0.00353 BNB\n                    </h5>\n                  </div>\n                  <div className=\"jss124\">\n                    <h5 className=\"MuiTypography-root jss125 MuiTypography-h5\">\n                      Hardcap\n                    </h5>\n                    <h5 className=\"MuiTypography-root jss126 MuiTypography-h5\">\n                      1000 BNB\n                    </h5>\n                  </div>\n                  <div className=\"jss124\">\n                    <h5 className=\"MuiTypography-root jss125 MuiTypography-h5\">\n                      Max Per Wallet\n                    </h5>\n                    <h5 className=\"MuiTypography-root jss126 MuiTypography-h5\">\n                      4.00 BNB\n                    </h5>\n                  </div>\n                  <div className=\"jss124\">\n                    <h5 className=\"MuiTypography-root jss125 MuiTypography-h5\">\n                      Liquidity Lock Duration\n                    </h5>\n                    <h5 className=\"MuiTypography-root jss126 MuiTypography-h5\">\n                      365 days\n                    </h5>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <p className=\"mb-0 font-size-sm text-center text-muted\">\n            Back to{\" \"}\n            <a className=\"MuiTypography-root jss108 MuiTypography-h5\" href=\"/\">\n              home page\n            </a>\n            .\n          </p>\n          <div className=\"row\">\n            <h2 className=\"font-weight-bold title-history\">History 1</h2>\n          </div>\n          <div className=\"table-response\">\n            <table className=\"table table-dark\">\n              <thead>\n                <tr>\n                  <th scope=\"col\">Id</th>\n                  <th scope=\"col\">Amount</th>\n                  <th scope=\"col\">Day Created</th>\n                  <th scope=\"col\">BSCS Received</th>\n                  <th scope=\"col\">Blocked</th>\n                  <th scope=\"col\">Next Month</th>\n                  <th scope=\"col\">Action</th>\n                </tr>\n              </thead>\n              <tbody>\n                {orders &&\n                  orders.map((item, i) => {\n                    return (\n                      <tr key={`item_${item[2]}`}>\n                        <th scope=\"row\">{i + 1}</th>\n                        <td>{getBalanceNumber(item[3]).toFixed(4)}</td>\n                        <td>\n                          {moment.unix(item[2]).format(\"DD/MM/YYYY, HH:mm:ss\")}\n                        </td>\n                        <td>{getBalanceNumber(item.amountBSCS).toFixed(4)}</td>\n                        <td>\n                          {getBalanceNumber(item.amountBSCSBlock).toFixed(4)}\n                        </td>\n                        <td>\n                          {moment\n                            .unix(item.nextMonth)\n                            .format(\"DD/MM/YYYY, HH:mm:ss\")}\n                        </td>\n                        <td>\n                          <button\n                            onClick={async () => {\n                              await _handleWithDraw(item);\n                            }}\n                            className={`btn btn-withdraw ${!isWithDraw(item.nextMonth, blockTimestamp)\n                                ? \"disabled\"\n                                : \"\"\n                              }`}\n                          >\n                            Withdraw\n                          </button>\n                        </td>\n                      </tr>\n                    );\n                  })}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n};\n\nexport default Forms;\n","import axios from 'axios'\nimport { createStore, createHook, createContainer, createSubscriber } from 'react-sweet-state'\n// import { API_IDO } from '../../constants'\n\n\nconst StoreProjects = createStore({\n  initialState: {\n    idoList: []\n   },\n  actions: {\n    getProject: () => ({ getState, setState }) => {   \n       return new Promise((resolve, reject) => {\n        axios.post(`https://nftapi.bscstation.org/api/Ido/get_idos`, {}).then((res) => {         \n          let { data } = res.data\n          data = data.map((item, i) => {\n            return item\n          })\n          setState({ idoList: data })\n          resolve(data)\n        })\n       }) \n    },\n  },\n  name: 'Projects Store',\n})\n\nexport const useHookProjects = createHook(StoreProjects)\nexport const Container = createContainer(StoreProjects, {\n  onInit: () => ({ setState }, props) => {\n    setState({ ...props })\n  },\n})\nexport const Subscriber = createSubscriber(StoreProjects)\n","/* eslint-disable react/jsx-no-target-blank */\n/* eslint-disable no-nested-ternary */\n/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { useState, useCallback, useEffect } from \"react\";\nimport \"../../index\";\nimport { useHookProjects } from './Store-Projects'\nimport Header from \"../common/Header\"\n\n\nconst ItemProject = ({ item }) => {\n\n    const [state, actions] = useHookProjects()\n\n    return (\n        <>\n            <div className=\"col-lg-6 col-md-6 text-center\">\n                <a className=\"card-project\" href={`/projects/${item.id}`} target=\"_blank\" >\n                    <div className=\"single-item\" >\n                        <div className=\"pp-card-body\">\n                            <div className=\"pp-card-top\">\n                                <a>\n                                    <div className=\"icon-box\">\n                                        <span>\n                                            <img src=\"img/logobscs.png\" alt=\"#\" />\n                                        </span>\n                                    </div>\n                                </a>\n                                <div className=\"title-box\">\n                                    <h3 className=\"d-flex align-items-center\">\n                                        <a>\n                                            <div>{item.name}</div>\n                                        </a>\n                                        {item.status === 0 ?\n                                            (<span className=\"status\">Pending</span>) : (\n                                                item.status === 1 ? (\n                                                    (<span className=\"status\">Approved</span>)\n                                                ) : (\n                                                    item.status === 2 ? (\n                                                        <span className=\"status\">Process</span>\n                                                    ) : (\n                                                        <span className=\"status\">Close</span>\n                                                    )\n                                                )\n                                            )\n                                        }                                 \n                                    </h3>\n                                    <div className=\"item-social flex-row\">\n                                        <div>\n                                            <ul className=\"list-unstyled list-inline list-social mb-6 mb-md-0\">\n                                                <li className=\"list-inline-item list-social-item\">\n                                                    <a href={item.socical.zkchaos} className=\"text-decoration-none bg-border\" target=\"_blank\" >\n                                                        <img src=\"img/conection.svg \" className=\"list-social-icon\" alt=\"...\" />\n                                                    </a>\n                                                </li>\n                                                <li className=\"list-inline-item list-social-item mr-3\">\n                                                    <a href={item.socical.twitter} className=\"text-decoration-none bg-border\" target=\"_blank\" >\n                                                        <img src=\"img/icons/social/twitter.png\" className=\"list-social-icon\" alt=\"...\" />\n                                                    </a>\n                                                </li>\n                                                <li className=\"list-inline-item list-social-item mr-3\">\n                                                    <a href={item.socical.telegram}\n                                                        className=\"text-decoration-none bg-border\" target=\"_blank\" >\n                                                        <img src=\"img/icons/social/telegram.png\"\n                                                            className=\"list-social-icon\" alt=\"...\" />\n                                                    </a>\n                                                </li>\n                                                <li className=\"list-inline-item list-social-item mr-3\">\n                                                    <a href={item.socical.medium}\n                                                        className=\"text-decoration-none bg-border\" target=\"_blank\" >\n                                                        <img src=\"img/icons/social/medium.png\"\n                                                            className=\"list-social-icon\" alt=\"...\" />\n                                                    </a>\n                                                </li>\n                                            </ul>\n                                        </div>                                    \n                                    </div>\n                                    <a className=\"items-morex\" href=\"#!\">        \n                                        <br />                                                                   \n                                        <span className=\"pp-status-opening\">{item.unit}</span><br /><br />\n\n                                        <div><span className=\"\">{item.symbol}</span></div>                                      \n                                    </a>\n                                    <br />\n                                    <div className=\"pp-card-col\">{item.swapAmount}</div>\n                                </div>\n                            </div>\n                            <a href={`/projects/${item.id}`} target=\"_blank\" >\n                                <div className=\"part-prize\">\n                                    <div className=\"pp-card-info\">\n                                        <div className=\"pp-card-col\">Total raise <br />\n                                            <b className=\"nowrap\">{item.totalSupply}</b> <br />\n                                            <div className=\"pp-card-col\">({item.usdPrice} USD)</div>\n                                        </div>\n                                    </div>\n                                    <div className=\"pp-card-info d-block\">\n                                        <div className=\"pp-card-progress-wrap\">\n                                            <div\n                                                className=\"mb-2 d-flex justify-content-between align-items-center pp-card-progress-top\">\n                                                <div className=\"pp-card-col\">Progress</div>\n                                            </div>\n                                            <div className=\"pp-card-progress\">\n                                                <div className=\"pp-card-progress-percent\" />\n                                                <div className=\"pp-card-progress-label\">\n                                                    <span><b>0.00%</b></span><span\n                                                        className=\"text-allocation\"><b>100%</b></span>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div className=\"pp-card-info\">\n                                        <div className=\"pp-card-col\">Max.<br /><b className=\"nowrap\">{item.maxAllocation}</b></div>\n                                        <div className=\"pp-card-col text-center ps-28\">Min.<br /><b>{item.minAllocation}</b></div>\n                                        <div className=\"pp-card-col text-end\">Access<br /><b>{item.accessType}</b></div>\n                                    </div>\n                                </div>\n                            </a>\n                        </div>\n                    </div>\n                </a>\n            </div>\n        </>\n    )\n}\n\n/* eslint-disable react/button-has-type */\nconst Projects = (prop) => {\n    const [state, actions]: any = useHookProjects()\n    const { idoList }: any = state\n\n\n    useEffect(() => {\n         actions.getProject()\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    return (\n        <div data-aos-easing=\"ease-out-quad\" className=\"bg-map\" data-aos-duration=\"700\" data-aos-delay=\"0\">\n            <Header />\n\n            <section className=\"section-border border-primary\">\n                <div className=\"container d-flex flex-column\">\n                    <div className=\"row align-items-center justify-content-center no-gutters\" style={{ \"paddingTop\": \"150px\" }}>\n                        <div className=\"investment-section-items\">\n                            <div className=\"row d-flex\">\n                                {idoList\n                                    .map((item: any, i) => (\n                                        <ItemProject\n                                            key={item.id}\n                                            item={item}\n                                        />\n                                    ))}\n                            </div>\n                        </div>\n                    </div>\n\n                </div>\n            </section>\n        </div>\n    )\n}\n\nexport default Projects;","import BigNumber from \"bignumber.js/bignumber\";\n\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n});\n\nexport const CAKE_PER_BLOCK = new BigNumber(40);\nexport const BLOCKS_PER_YEAR = new BigNumber(10512000);\nexport const BSC_BLOCK_TIME = 3;\nexport const CAKE_POOL_PID = 1;\nexport const BASE_URL = \"https://pancakeswap.finance\";\nexport const BASE_EXCHANGE_URL = \"https://exchange.pancakeswap.finance\";\nexport const BASE_ADD_LIQUIDITY_URL = `${BASE_EXCHANGE_URL}/#/add`;\nexport const BASE_LIQUIDITY_POOL_URL = `${BASE_EXCHANGE_URL}/#/pool`;\nexport const LOTTERY_MAX_NUMBER_OF_TICKETS = 50;\nexport const LOTTERY_TICKET_PRICE = 1;\n\nexport const LIST_POOL_IDO = {\n  zkchaos: {\n    pool: \"0xed3d91d67adc3f2e265ac0f327c049be9aad7d58\",\n  },\n};\n\n// PROD : \"0xe9e7cea3dedca5984780bafc599bd69add087d56\";\n// TEST : \"0x2861cdDf4631c53c062Be728BFD4C4EFD36F0887\";\nexport const BUSD_TOKEN = \"0x2861cdDf4631c53c062Be728BFD4C4EFD36F0887\" \nexport const API_NFT = \"https://nftapi.bscstation.org/api/\"\nexport const ADDRESS_RECEVIE_BUSD = \"0xDCC08b2c52023081b9F7e9c3dc22B16AD6EE7809\"\n\n\n","import axios from \"axios\";\nimport {\n  createStore,\n  createHook,\n  createContainer,\n  createSubscriber,\n} from \"react-sweet-state\";\nimport { API_NFT } from \"config\";\n\nconst StoreDetail = createStore({\n  initialState: {\n    objData: {},\n    active: 1,\n    classTb1: \"nav-link  ripple ripple-surface-info active\",\n    classTb2: \"nav-link  ripple ripple-surface-info\",\n    classTb3: \"nav-link  ripple ripple-surface-info\",\n    listAllocations: [],\n    objJoin: {\n      busd: 0,\n      isJionPool: false,\n    },\n    yourAllocations: 0,\n  },\n  actions: {\n    addJoinPool: (obj) => ({ getState, setState }) => {\n      return new Promise((resolve, reject) => {\n        axios\n          .post(`${API_NFT}Ido/join_pool`, {\n            ido_Id: parseInt(obj.id),\n            ownerAddress: obj.account,\n            balance: obj.amount,\n            txnhash: obj.blockHash,\n          })\n          .then((res) => {\n            const { data } = res.data;\n            setState({ objJoin: { ...getState().objJoin, isJionPool: false } }); // TODO\n            resolve(data);\n          });\n      });\n    },\n    checkJoinPool: (obj) => ({ getState, setState }) => {\n      return new Promise((resolve, reject) => {\n        axios.post(`${API_NFT}Ido/pool_weight_by_address`, obj).then((res) => {\n          const { data } = res.data;\n          if (data) {\n            setState({ objJoin: data }); // TODO\n            resolve(data);\n          }\n        });\n      });\n    },\n    getProjectDetail: (id) => ({ getState, setState }) => {\n      return new Promise((resolve, reject) => {\n        axios(`${API_NFT}Ido/${id}`).then((res) => {\n          const { data } = res.data;\n          setState({ objData: { ...data } }); // TODO\n          // resolve(data)\n        });\n      });\n    },\n    getYourAllocations: (obj) => ({ getState, setState }) => {\n      return new Promise((resolve, reject) => {\n        axios.post(`${API_NFT}Ido/your_allocations`, obj).then((res) => {\n          const { data } = res.data;\n          setState({ yourAllocations: (data && data[0] && data[0].token) || 0 });\n          resolve(data);\n        });\n      });\n    },\n    activeTable1: () => ({ getState, setState }) => {\n      setState({\n        active: 1,\n        classTb1: \"nav-link  ripple ripple-surface-info active\",\n        classTb2: \"nav-link  ripple ripple-surface-info\",\n        classTb3: \"nav-link  ripple ripple-surface-info\",\n      });\n    },\n    activeTable2: () => ({ getState, setState }) => {\n      setState({\n        active: 2,\n        classTb2: \"nav-link  ripple ripple-surface-info active\",\n        classTb1: \"nav-link  ripple ripple-surface-info\",\n        classTb3: \"nav-link  ripple ripple-surface-info\",\n      });\n    },\n    activeTable3: () => ({ getState, setState }) => {\n      setState({\n        active: 3,\n        classTb3: \"nav-link  ripple ripple-surface-info active\",\n        classTb2: \"nav-link  ripple ripple-surface-info\",\n        classTb1: \"nav-link  ripple ripple-surface-info\",\n      });\n    },\n    // getYourAllocations:()=>({getState, setState})=>{\n    //   return new Promise((resolve, reject) => {\n    //     axios.post(`https://nftapi.bscstation.org/api/Ido/your_allocations`,{}).then((res) => {\n    //       let { data } = res.data\n    //       data = data.map((item, i) => {\n    //         return item\n    //       })\n    //       setState({ listAllocations: data })\n    //     }, [])\n    //    })\n    // }\n  },\n  name: \"Detail Store\",\n});\n\nexport const useHookDetail = createHook(StoreDetail);\nexport const Container = createContainer(StoreDetail, {\n  onInit: () => ({ setState }, props) => {\n    setState({ ...props });\n  },\n});\nexport const Subscriber = createSubscriber(StoreDetail);\n","\nimport React, { useState, useCallback, useEffect } from \"react\";\nimport \"../../index\";\n\nimport { useHookDetail } from './Store-Detail'\n\n\nconst TableAllocations = () => {\n\n    // const [state, actions]: any = useHookDetail()\n    // const { listAllocations }: any = state\n\n    // useEffect(() => {\n    //     actions.getYourAllocations()\n    //     // eslint-disable-next-line react-hooks/exhaustive-deps\n    // }, [])\n\n    return (\n\n        <div className=\"tab-pane fade show active\" role=\"tabpanel\">\n            <div className=\"row\">\n                <div className=\"col-md-12\">\n                    <div className=\"card\">\n                        {/* <div className=\"card-header\">Pool information</div> */}\n                        <div className=\"card-body p-0\">\n                            <div className=\"table-responsive\">\n                                <table className=\"table mw01 mb-0 nobg\">\n                                    <thead>\n                                        <tr>\n                                            <th scope=\"col\">No.</th>\n                                            <th scope=\"col\">Token allocation</th>\n                                            <th scope=\"col\">Date</th>\n                                            <th scope=\"col\">Token(s) claimed</th>\n                                            <th scope=\"col\">Action</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        <tr>\n                                            <th scope=\"row\">1</th>\n                                            <td>0</td>\n                                            <td>0</td>\n                                            <td>0</td>\n                                            <td>0</td>\n                                        </tr>\n                                    </tbody>\n                                </table>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n            </div>\n        </div>\n\n\n\n        // <table className=\"table\">\n        //     <thead>\n        //         <tr>\n        //             <th scope=\"col\">No.</th>\n        //             <th scope=\"col\">Token allocation</th>\n        //             <th scope=\"col\">Date</th>\n        //             <th scope=\"col\">Token(s) claimed</th>\n        //             <th scope=\"col\">Action</th>\n        //         </tr>\n        //     </thead>\n        //     <tbody>\n        //         <tr>\n        //             <th scope=\"row\">1</th>\n        //             <td>0</td>\n        //             <td>0</td>\n        //             <td>0</td>\n        //             <td>0</td>\n        //         </tr>\n        //     </tbody>\n        // </table>\n    );\n};\n\nexport default TableAllocations;\n","/* eslint-disable react/jsx-no-target-blank */\n/* eslint-disable no-nested-ternary */\n/* eslint-disable jsx-a11y/anchor-is-valid */\n/* eslint-disable jsx-a11y/label-has-associated-control */\n\nimport React, { useState, useCallback, useEffect } from \"react\";\nimport \"../../index\";\n\nimport { useHookDetail } from './Store-Detail'\nimport TableAllocations from \"./Table_Allocations\"\n\nconst TableInfo = () => {\n\n    const [state, actions]: any = useHookDetail()\n    const { objData } = state\n\n    return (\n        <div className=\"c-tabs\">\n            <div className=\"container\">\n                <ul className=\"nav nav-tabs mb-3\" role=\"tablist\">\n                    <li className=\"nav-item active  \" role=\"presentation\" onClick={actions.activeTable1}>\n                        <a className={state.classTb1} data-mdb-toggle=\"tab\" role=\"tab\" >Pool Details</a>\n                    </li>\n                    <li className=\"nav-item\" role=\"presentation\" onClick={actions.activeTable2}>\n                        <a className={state.classTb2} data-mdb-toggle=\"tab\" role=\"tab\" >About the Project</a>\n                    </li>\n                    <li className=\"nav-item\" role=\"presentation\" onClick={actions.activeTable3}>\n                        <a className={state.classTb3} data-mdb-toggle=\"tab\" role=\"tab\" >Your allocations</a>\n                    </li>\n                </ul>\n                <div className=\"tab-content\" id=\"ex1-content\">\n\n                    {state.active === 1 ? (\n\n                        <div className=\"tab-pane fade show active\" role=\"tabpanel\">\n                            <div className=\"row\">\n                                <div className=\"col-md-6\">\n                                    <div className=\"card\">\n                                        <div className=\"card-header\">Pool information</div>\n                                        <div className=\"card-body p-0\">\n                                            <div className=\"table-responsive\">\n                                                <table className=\"table mw01 mb-0 nobg\">\n                                                    <tbody>\n                                                        <tr>\n                                                            <td>Token Distribution</td>\n                                                            <td>{objData && objData.tokenDistribution} </td>\n                                                        </tr>\n                                                        <tr>\n                                                            <td>Min. Allocation</td>\n                                                            <td>{objData && objData.minAllocation} </td>\n                                                        </tr>\n                                                        <tr>\n                                                            <td>Max. Allocation</td>\n                                                            <td>{objData && objData.maxAllocation}</td>\n                                                        </tr>\n                                                        <tr>\n                                                            <td>Soft Cap</td>\n                                                            <td>{objData && objData.softCap}</td>\n                                                        </tr>\n                                                        <tr>\n                                                            <td>Access type</td>\n                                                            {objData && objData.accessType === 0 ? (\n                                                                <td><span>Private</span></td>\n                                                            ) : (\n                                                                <td><span>Public</span></td>\n                                                            )}\n                                                        </tr>\n                                                    </tbody>\n                                                </table>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-6 mt-4 mt-md-0\">\n                                    <div className=\"card\">\n                                        <div className=\"card-header\">Token information</div>\n                                        <div className=\"card-body p-0\">\n                                            <div className=\"table-responsive\">\n                                                <table className=\"table mb-0 nobg\">\n                                                    <tbody>\n                                                        <tr>\n                                                            <td>Name</td>\n                                                            <td> {objData && objData.name}</td>\n                                                        </tr>\n                                                        <tr>\n                                                            <td>Address</td>\n                                                            <td>{objData && objData.ownerAddress}</td>\n                                                        </tr>\n                                                        <tr>\n                                                            <td>Total Supply</td>\n                                                            <td>{objData && objData.totalSupply}</td>\n                                                        </tr>\n                                                        <tr>\n                                                            <td>Decimals</td>\n                                                            <td>{objData && objData.decimals}</td>\n                                                        </tr>\n                                                        <tr>\n                                                            <td>Symbol</td>\n                                                            <td>{objData && objData.symbol}</td>\n                                                            \n                                                        </tr>\n                                                    </tbody>\n                                                </table>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    ) : (\n                        state.active === 2 ? (\n                            <>\n                                {/* <h2>\n                                    <img src=\"../img/logo-dark.png\" alt=\"#\" style={{\"height\":\"30px\", \"width\":\"180px\"}} />\n                                </h2> */}\n                                <div className=\"item-social flex-row\">\n                                    <div>\n                                        <ul className=\"list-unstyled list-inline list-social mb-6 mb-md-0\">\n                                            <li className=\"list-inline-item list-social-item\">\n                                                <a href={objData && objData.socical.zkchaos} className=\"text-decoration-none bg-border\" target=\"_blank\" >\n                                                    <img src=\"../img/conection.svg \" className=\"list-social-icon-allocations\" alt=\"...\" />\n                                                </a>\n                                            </li>\n                                            <li className=\"list-inline-item list-social-item mr-3\">\n                                                <a href={objData && objData.socical.twitter} className=\"text-decoration-none bg-border\" target=\"_blank\" >\n                                                    <img src=\"../img/icons/social/twitter.png\" className=\"list-social-icon-allocations\" alt=\"...\" />\n                                                </a>\n                                            </li>\n                                            <li className=\"list-inline-item list-social-item mr-3\">\n                                                <a href={objData && objData.socical.telegram}\n                                                    className=\"text-decoration-none bg-border\" target=\"_blank\" >\n                                                    <img src=\"../img/icons/social/telegram.png\"\n                                                        className=\"list-social-icon-allocations\" alt=\"...\" />\n                                                </a>\n                                            </li>\n                                            <li className=\"list-inline-item list-social-item mr-3\">\n                                                <a href={objData && objData.socical.medium}\n                                                    className=\"text-decoration-none bg-border\" target=\"_blank\" >\n                                                    <img src=\"../img/icons/social/medium.png\"\n                                                        className=\"list-social-icon-allocations\" alt=\"...\" />\n                                                </a>\n                                            </li>\n                                        </ul>\n                                    </div>\n                                </div>\n                                <div className=\"dest mt-3\">\n\n                                    {objData && objData.description}\n                                </div>\n                            </>\n                        ) : (\n                            <TableAllocations />\n                        )\n                    )\n                    }\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default TableInfo;\n","import web3 from \"web3\";\nimport BigNumber from \"bignumber.js\";\n\nconst convertNumber = (value) => {\n  return web3.utils.toHex(web3.utils.toWei(value, \"ether\"));\n};\n\nexport const _joinPool = async (busdContract, to, amount, account) => {\n  try {\n    const amountTemp = new BigNumber(amount)\n      .times(new BigNumber(10).pow(18))\n      .toString();\n    const args = [to, amountTemp];\n\n    const gas = await busdContract.methods\n      .transfer(...args)\n      .estimateGas({ from: account });\n\n    return busdContract.methods\n      .transfer(to, amountTemp)\n      .send({ from: account, gasLimit: gas });\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const _withDrawToken = async (poolContract, amount, account) => {\n  const amountTemp = new BigNumber(amount)\n    .times(new BigNumber(10).pow(18))\n    .toString();\n\n  const args = [amountTemp];\n\n  const gas = await poolContract.methods\n    .claim(...args)\n    .estimateGas({ from: account });\n  return poolContract.methods.claim(amountTemp).send({ gas, from: account });\n};\nexport const _isClaim = async (poolContract, account) => {\n  return poolContract.methods.users(account).call();\n};\n","/* eslint-disable no-nested-ternary */\n/* eslint-disable jsx-a11y/anchor-is-valid */\n/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React, { useState, useCallback, useEffect } from \"react\";\nimport { useTokenBalance } from \"hooks/useSellHelpers\";\nimport { useBUSDContract, useERC20, useIDOContract } from \"hooks/useContract\";\nimport { ADDRESS_RECEVIE_BUSD, BUSD_TOKEN, LIST_POOL_IDO } from \"config\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport useClaim from \"hooks/useClaim\";\nimport \"../../index\";\nimport { useHookDetail } from \"./Store-Detail\";\nimport { _isClaim, _joinPool, _withDrawToken } from \"./utils\";\n\nconst Banner = ({ props }: any): any => {\n  const [state, actions]: any = useHookDetail();\n  const [balClaimed, setBalClaimed] = useState(0);\n  const { objData, yourAllocations, objJoin } = state;\n  const [loading, setLoading] = useState(false);\n  const [loadingClaim, setLoadingClaim] = useState(false);\n  const { account } = useWeb3React();\n  const amount = useTokenBalance(BUSD_TOKEN);\n  const busdContract = useERC20(BUSD_TOKEN);\n  const idoContract = useIDOContract();\n  const {\n    match: { params },\n  }: any = props;\n\n  useEffect(() => {\n    actions.getProjectDetail(params && params.id);\n    // window.scrollTo({ top: 0 })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [params.id]);\n\n  useEffect(() => {\n    if (account) {\n      actions.checkJoinPool({\n        idoId: objData && objData.id,\n        address: account,\n      });\n      actions.getYourAllocations({\n        idoId: objData && objData.id,\n        address: account,\n      });\n      _isClaim(idoContract, account).then((res) => {\n        setBalClaimed(parseFloat(res));\n      });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [account]);\n\n  console.log(\"objJoin: \", objJoin);\n\n  const _handleClaim = () => {\n    setLoadingClaim(true);\n    _withDrawToken(idoContract, yourAllocations, account)\n      .then((res) => {\n        console.log(\"_withDrawTokenL: \", res);\n        setLoadingClaim(false);\n      })\n      .catch(() => {\n        setLoadingClaim(false);\n      });\n  };\n  const _handleJoinPool = () => {\n    const amtJoin = objJoin.busd;\n    if (amount.toNumber() / 1e18 >= amtJoin) {\n      setLoading(true);\n      _joinPool(busdContract, ADDRESS_RECEVIE_BUSD, amtJoin, account)\n        .then((res) => {\n          console.log(\"res>>>\", res);\n          // call api add join pool\n          actions.addJoinPool({\n            id: params.id,\n            account,\n            amount: objJoin.busd,\n            blockHash: res.blockHash,\n          });\n          setLoading(false);\n        })\n        .catch((error) => {\n          console.log(\"error>\", error);\n          setLoading(false);\n        });\n    } else {\n      alert(\"Insufficient BUSD balance\");\n    }\n  };\n\n  let checkJoin = false;\n  if (objJoin.isJionPool) {\n    checkJoin = true;\n  }\n\n  return (\n    <div className=\"c-banner\">\n      <div className=\"container\">\n        <div className=\"row align-items-center\">\n          <div className=\"col-lg-5 col-md-6\">\n            <div className=\"c-banner__logo\">\n              <span>\n                <img src=\"../img/logobscs.png \" alt=\"#\" />\n              </span>\n            </div>\n            <h2 className=\"ms-0 c-banner__ttl\">\n              {objData && objData.name}\n              {/* <a href=\"#\" target=\"_blank\">\n                    <i className=\"fas fa-globe-americas\" />\n                  </a>\n                  <a href=\"#\" target=\"_blank\">\n                    <i className=\"fab fa-twitter\" />\n                  </a>\n                  <a href=\"#\" target=\"_blank\">\n                    <i className=\"fab fa-medium-m\" />\n                  </a>\n                  <a href=\"#\" target=\"_blank\">\n                    <i className=\"fab fa-telegram-plane\" />\n                  </a> */}\n            </h2>\n            <div className=\"mb-3 mt-3\">\n              <p className=\"text-muted\">{objData && objData.ownerAddress}</p>\n            </div>\n            <div className=\"c-banner__tag\">\n              {objData && objData.status === 0 ? (\n                <span className=\"tag-close ripple ripple-surface-info\">\n                  Pending\n                </span>\n              ) : objData && objData.status === 1 ? (\n                <span className=\"status\">Approved</span>\n              ) : objData && objData.status === 2 ? (\n                <span className=\"tag-close ripple ripple-surface-info\">\n                  Process\n                </span>\n              ) : (\n                <span className=\"tag-close ripple ripple-surface-info\">\n                  Close\n                </span>\n              )}\n            </div>\n            <div className=\"mb-3\">\n              <p className=\"text-muted\">\n                {objData && objData.shortDescription}\n              </p>\n            </div>\n            <button\n              type=\"button\"\n              className=\"btn btn-primary ripple-surface-dark me-2\"\n              data-bs-toggle=\"modal\"\n              data-bs-target=\"#connectWalletModal\"\n              disabled={!checkJoin || loading}\n              onClick={() => _handleJoinPool()}\n            >\n              Join Pool\n              {loading ? <i className=\"fa fa-spinner fa-spin\" /> : \"\"}\n            </button>\n            <button\n              type=\"button\"\n              className=\"btn btn-primary ripple-surface-dark me-2\"\n              data-bs-toggle=\"modal\"\n              data-bs-target=\"#connectWalletModal\"\n            >\n              View on Bscscan\n            </button>\n          </div>\n          <div className=\"col-lg-5 col-md-6\">\n            <div className=\"card c-card mx-auto mx-lg-0\">\n              <div className=\"card-body px-3 py-2\">\n                <div className=\"c-card__info\">\n                  <div className=\"card-left\">\n                    <div className=\"card-title cus mt-2\">Swap Amount </div>\n                    <div className=\"card-desc cus\">\n                      {objData && objData.totalSupply}\n                    </div>\n\n                    {/* <div className=\"card-title cus mt-2\">Your approved Amount:</div>\n                        <div className=\"card-desc\">0.0000 KRUPTO</div> */}\n                  </div>\n\n                  <div className=\"card-right\">\n                    <div className=\"card-title cus mt-2\">\n                      {objData && objData.swapAmount}\n                    </div>\n                    {/* <div className=\"card-desc\">-</div> */}\n                  </div>\n                </div>\n                {/* <hr className=\"mb-2 mt-2\" />\t\n                    <div className=\"c-card__info\">\n                      <div className=\"card-title mt-2\">CLOSED</div>\n                    </div> */}\n                <hr className=\"mb-2 mt-2\" />\n                <div className=\"c-card__info\">\n                  {/* <div className=\"card-left\">\n                        <div className=\"card-title cus mt-2\">Swapped</div>\n                        <div className=\"card-desc\">0.0000 BUSD</div>\n                        <div className=\"card-desc-1\">0.0000 KRUPTO</div>\n                      </div>\n                      <div className=\"card-right\">\n                        <div className=\"card-title cus mt-2\">Remaining Allocation</div>\n                        <div className=\"card-desc\">0.0000 BUSD</div>\n                        <div className=\"card-desc-1\">0.0000 KRUPTO</div>\n                      </div> */}\n                </div>\n                {/* <hr className=\"mb-2 mt-2\" /> */}\n                <div className=\"c-card__info\">\n                  <p className=\"card-text w-200px\">Swap progress</p>\n                  <div\n                    className=\"c-card__progress\"\n                    style={{ width: \"100%;\" }}\n                  />\n                  <div className=\"c-card__label\">\n                    <span>\n                      <b>100.00%</b>\n                    </span>\n                    <span>{objData && objData.totalSupply}</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Investment */}\n\n      <div className=\"container d-flex flex-column investment\">\n        <div className=\"jss129\">\n          <h1 className=\"MuiTypography-root jss130 MuiTypography-h1\">\n            Your Investment\n          </h1>\n          <div className=\"jss131\">\n            <div className=\"jss132\">\n              {/* <div className=\"jss134\">\n                    <h5 className=\"MuiTypography-root jss135 MuiTypography-h5\">VOTE</h5>\n                    <h2 className=\"MuiTypography-root jss136 MuiTypography-h2\">0.000 START</h2>\n                    <button className=\"MuiButtonBase-root MuiButton-root jss137 MuiButton-text Mui-disabled Mui-disabled\" tabIndex={-1} type=\"button\" >\n                        <span className=\"MuiButton-label jss138\">VOTE</span>\n                    </button>\n                </div> */}\n              <div className=\"jss134\">\n                <h5 className=\"MuiTypography-root jss135 MuiTypography-h5\">\n                  Your Tokens\n                </h5>\n                <h2 className=\"MuiTypography-root jss136 MuiTypography-h2\">\n                  {(!balClaimed && yourAllocations) || 0}\n                </h2>\n                <button\n                  disabled={balClaimed > 0 || loadingClaim || !yourAllocations}\n                  onClick={() => _handleClaim()}\n                  className=\"btn-investment\"\n                  type=\"button\"\n                >\n                  <span className=\"btn-investment-content\">\n                    Claim Tokens\n                    {loadingClaim ? (\n                      <i className=\"fa fa-spinner fa-spin\" />\n                    ) : (\n                      \"\"\n                    )}\n                  </span>\n                </button>\n              </div>\n              {/* <div className=\"jss134\">\n                    <h5 className=\"MuiTypography-root jss135 MuiTypography-h5\">Your BNB Investment</h5>\n                    <h2 className=\"MuiTypography-root jss136 MuiTypography-h2\">0.0000 BNB</h2>\n                    <button className=\"btn-investment\"  type=\"button\" >\n                        <span className=\"btn-investment-content\">Get Refund</span>\n                    </button>\n                </div> */}\n              <div className=\"jss134\">\n                <h5 className=\"MuiTypography-root jss135 MuiTypography-h5\">\n                  Buy Tokens\n                </h5>\n                <h2 className=\"MuiTypography-root jss136 MuiTypography-h2\">\n                  {objData && objData.swapAmount}\n                </h2>\n                <button disabled className=\"btn-investment\" type=\"button\">\n                  <span className=\"btn-investment-content\">Buy</span>\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Banner;\n","\nimport React, { useState, useCallback, useEffect } from \"react\";\nimport \"../../index\";\n\nimport Header from \"../common/Header\"\nimport TableInfo from \"./Table_info\"\nimport Banner from \"./Banner\"\n\nconst Detail = (props) => {\n  return (\n    <>\n      <div className=\"p-bscpad \">\n        <Header />\n        <Banner props={props} />    \n        <TableInfo />             \n      </div>\n    </>\n  );\n};\n\nexport default Detail;\n","import React, { lazy } from 'react'\nimport { Router, Route, Switch } from 'react-router-dom'\nimport { ResetCSS } from '@pancakeswap-libs/uikit'\nimport BigNumber from 'bignumber.js'\nimport GlobalStyle from './style/Global'\nimport history from './routerHistory'\nimport Login from \"./views/Sell/components/Forms\";\nimport Projects from \"./views/Sell/components/Projects/index\"\nimport Detail from \"./views/Sell/components/Detail/index\"\n// \n// This - configs is requireds for number formatings\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\nconst listRoute = ['/docs', '/faq', '/introduction', '/tokenomics', '/roadmap', '/Analytics', '/use-MetaMask'\n  , '/Communities', '/start-pools', '/BSCSwap-Exchange', '/frontend-software-engineer', '/solidity-engineer', '/technical-writer'\n  , '/senior-qa-engineer', '/ux-ui-designer', '/add-Liquidity-trustwallet', '/add-Liquidity-metamask', '/remove-liquidity', '/artworks-upload', '/']\nconst App: React.FC = () => {\n  return (\n    <Router history={history}>\n      <ResetCSS />\n      <GlobalStyle />\n      <Switch>\n        <Route exact path=\"/\" component={() => <iframe width=\"100%\" height=\"100%\" src=\"/home.html\" title=\"home\" />} />\n        {/* <Route path=\"/\" exact>\n         <Pools />\n        </Route> */}\n\n        <Route path=\"/buy-token\" component={() => <Login />} />\n        <Route exact strict path=\"/projects\" component={() => <Projects />} />\n        {/* <Route exact strict path=\"/detail\" component={() => <Detail />} /> */}\n        <Route exact strict path=\"/projects/:id\" component={Detail} />\n\n        {listRoute.map((item) => (\n          <Route\n            key={item}\n            path={`${item}`}\n            component={() => <iframe width=\"100%\" height=\"100%\" src={`${item}.html`} title={item} />}\n          />\n        ))}\n\n        \n\n        <Route\n          path=\"*\"\n          component={() => {\n            return <iframe src=\"/404.html\" title=\"404\" />\n          }}\n        />\n      </Switch>\n    </Router>\n  )\n}\n\nexport default React.memo(App)\n","import React, { useState } from 'react'\nimport { ThemeProvider as SCThemeProvider } from 'styled-components'\nimport { light, dark } from '@pancakeswap-libs/uikit'\n\nconst CACHE_KEY = 'IS_DARK'\n\nconst ThemeContext = React.createContext({ isDark: null, toggleTheme: () => null })\n\nconst ThemeContextProvider = ({ children }) => {\n  const [isDark, setIsDark] = useState(() => {\n    const isDarkUserSetting = localStorage.getItem(CACHE_KEY)\n    return isDarkUserSetting ? JSON.parse(isDarkUserSetting) : false\n  })\n\n  const toggleTheme = () => {\n    setIsDark((prevState) => {\n      localStorage.setItem(CACHE_KEY, JSON.stringify(!prevState))\n      return !prevState\n    })\n  }\n\n  return (\n    <ThemeContext.Provider value={{ isDark, toggleTheme }}>\n      <SCThemeProvider theme={isDark ? dark : light}>{children}</SCThemeProvider>\n    </ThemeContext.Provider>\n  )\n}\n\nexport { ThemeContext, ThemeContextProvider }\n","import { createSlice } from '@reduxjs/toolkit'\nimport { Block } from '../types'\n\nconst initialState: Block = { blockNumber: 0 }\n\nexport const blockSlice = createSlice({\n  name: 'Block',\n  initialState,\n  reducers: {\n    setBlock: (_, action) => ({ blockNumber: action.payload }),\n  },\n})\n\n// Actions\nexport const { setBlock } = blockSlice.actions\n\nexport default blockSlice.reducer\n","import { configureStore } from '@reduxjs/toolkit'\n\nimport blockReducer from './block'\n\nexport default configureStore({\n  devTools: process.env.NODE_ENV !== 'production',\n  reducer: {\n    block: blockReducer,\n  },\n})\n","import React from 'react'\nimport { ModalProvider } from '@pancakeswap-libs/uikit'\nimport { Web3ReactProvider } from '@web3-react/core'\nimport { Provider } from 'react-redux'\nimport { getLibrary } from 'utils/web3React'\nimport { ThemeContextProvider } from 'contexts/ThemeContext'\n// import { RefreshContextProvider } from 'contexts/RefreshContext'\nimport store from 'state'\n\nconst Providers: React.FC = ({ children }) => {\n  return (\n    <Web3ReactProvider getLibrary={getLibrary}>\n      <Provider store={store}>\n        <ThemeContextProvider>\n            {/* <RefreshContextProvider> */}\n              <ModalProvider>{children}</ModalProvider>\n            {/* </RefreshContextProvider> */}\n        </ThemeContextProvider>\n      </Provider>\n    </Web3ReactProvider>\n  )\n}\n\nexport default Providers\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport Providers from './Providers'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Providers>\n      <App />\n    </Providers>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}